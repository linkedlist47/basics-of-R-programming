ðŸ”¸ Interview Curveballs
- Whatâ€™s the difference between apply(), lapply(), sapply(), and tapply()?
- How does R handle memory management?
- Explain environments and scoping rules.
- Whatâ€™s the difference between data.frame and data.table?
- How do you optimize performance in R scripts?

ðŸ”¸ Hidden Programming Features
- Vectorized Operations: R avoids loops by operating on entire vectors.
- Lazy Evaluation: Function arguments are only evaluated when needed.
- Closures: Functions can return other functions with preserved environments.
- S3 & S4 Classes: Object-oriented programming in R (S3 is informal, S4 is formal).
- R Markdown: Combine code, output, and narrative in one document.
- Rcpp: Integrate C++ code for performance boosts.

Core Concepts
- Vectors: Basic data structure; holds elements of the same type.
- Lists: Can hold elements of different types.
- Data Frames: Tabular data structure (like a spreadsheet).
- Functions: Defined using function(); R is functional at heart.
- Packages: Extend Râ€™s capabilities (e.g., ggplot2, dplyr, tidyr).

1.write a program take two numbers as inputs and performe addtion, subrcation,multiplcation,divsion, moduls and exponenet operations
2.write a program to compare two numbers using all relational and print whether each condition is true or false
3.write a program to check a number is between 10 and 50 using logical AND and OR operators use the not operator to revese the condition 
4.write a program to demonstrate shitf left and shift right and equals to assingment operators and assign values to variables in both directions and print the results
5.
